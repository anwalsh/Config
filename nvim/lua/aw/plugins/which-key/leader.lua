local wk = require("which-key")

wk.add({
    { ",w ", ":w<cr>", hidden = true },
    { "[b", "<cmd>bprevious<cr>", desc = "Next Buffer" },
    { "]b", "<cmd>bnext<cr>", desc = "Previous Buffer" },
    { "<TAB>", "<<cmd>e #<cr>", desc = "Switch to other Buffer" },
    { "<C-h>", "<C-w>h", desc = "Jump window left" },
    { "<C-j>", "<C-w>j", desc = "Jump window down" },
    { "<C-k>", "<C-w>k", desc = "Jump window up" },
    { "<C-l>", "<C-w>l", desc = "Jump window right" },
    { "<leader>1", "<cmd>lua require('harpoon.ui').nav_file(1)<cr>", hidden = true },
    { "<leader>2", "<cmd>lua require('harpoon.ui').nav_file(2)<cr>", hidden = true },
    { "<leader>3", "<cmd>lua require('harpoon.ui').nav_file(3)<cr>", hidden = true },
    { "<leader>4", "<cmd>lua require('harpoon.ui').nav_file(4)<cr>", hidden = true },
    { "<leader>5", "<cmd>lua require('harpoon.ui').nav_file(5)<cr>", hidden = true },
    { "<leader>/", "<cmd>Telescope live_grep<cr>", desc = "Text without args" },
    { "<leader>q", ":q<cr>", desc = "Quit" },
    {
        "<leader><leader>",
        "<Cmd>Legendary<CR>",
        desc = "Search All Commands",
    },
    {
        { "<leader>b", group = "+buffer" },
        { "<leader>bb", "<cmd>Telescope buffers<cr>", desc = "Find Buffers" },
        { "<leader>bN", "<Cmd>enew<CR>", desc = "New Empty Buffer" },
        { "<leader>bm", "<Cmd>messages<CR>", desc = "Show 'messages' Buffer" },
        { "<leader>bj", "<C-w>j", desc = "Lower Buffer Split" },
        { "<leader>bk", "<C-w>k", desc = "Upper Buffer Split" },
        { "<leader>bl", "<C-w>l", desc = "Right Buffer Split" },
        { "<leader>bh", "<C-w>h", desc = "Left Buffer Split" },
        { "<leader>bo", "<cmd>FocusMaximise<cr>", desc = "Focus Buffer Only" },
        { "<leader>bt", "<cmd>FocusMaxOrEqual<cr>", desc = "Focus Toggle" },
        { "<leader>bH", "<C-W>5<", desc = "Expand-buffer-left" },
        { "<leader>bJ", ":resize +5", desc = "Expand-buffer-below" },
        { "<leader>bL", "<C-W>5>", desc = "Expand-buffer-right" },
        { "<leader>bK", ":resize -5", desc = "Expand-buffer-up" },
    },
    {
        { "<leader>B", group = "+bookmarks" },
        { "<leader>Ba", "<cmd>lua require('harpoon.mark').add_file()<cr>,", desc = "Harpoon Add File" },
        { "<leader>Bs", "<cmd>Telescope harpoon marks<cr>", desc = "Search Harpoon Marks" },
        { "<leader>BA", "<cmd>silent BookmarkAnnotate<cr>", desc = "Annotate" },
        { "<leader>Bc", "<cmd>silent BookmarkClear<cr>", desc = "Clear" },
        { "<leader>Bt", "<cmd>silent BookmarkToggle<cr>", desc = "Toggle" },
        { "<leader>Bj", "<cmd>silent BookmarkNext<cr>", desc = "Next" },
        { "<leader>Bk", "<cmd>silent BookmarkPrev<cr>", desc = "Prev" },
        { "<leader>BS", "<cmd>Telescope vim_bookmarks all<cr>", desc = "Show All Bookmarks" },
        { "<leader>Bx", "<cmd>BookmarkClearAll<cr>", desc = "Clear All" },
        { "<leader>d", group = "+debug" },
        {
            { "<leader>f", group = "+file" },
            {
                "<leader>fb",
                "<cmd>lua require'telescope'.extensions.file_browser.file_browser()<cr>",
                desc = "File Browser",
            },
            { "<leader>ff", "<cmd>Telescope find_files<cr>", desc = "Find File" },
            {
                "<leader>fh",
                "<cmd>lua require('aw.plugins.telescope').find_hidden_files()<cr>",
                desc = "Find Hidden Files",
            },
            { "<leader>fn", "<cmd>enew<cr>", desc = "New File" },
            { "<leader>fr", "<cmd>Telescope oldfiles<cr>", desc = "Open Recent File" },
            { "<leader>fs", "<Cmd>w<CR>", desc = "Save Current File" },
            { "<leader>fS", "<Cmd>wa<CR>", desc = "Save All Open Files" },
        },
        {
            { "<leader>g", group = "+git" },
            { "<leader>gb", "<cmd>lua require('aw.plugins.telescope').git_branches()<cr>", desc = "Git Branches" },
            { "<leader>gs", "<cmd>Neogit<cr>", desc = "Neogit Status" },
            { "<leader>gd", "<cmd>DiffviewOpen<cr>", desc = "DiffView" },
            {
                { "<leader>gM", group = "Merge Conflict" },
                { "<leader>gMl", "<cmd>GitConflictListQf<cr>", desc = "List of Conflicts" },
                { "<leader>gMo", "<Plug>(git-conflict-ours)", desc = "Choose our change" },
                { "<leader>gMt", "<Plug>(git-conflict-theirs)", desc = "Choose their change" },
                { "<leader>gMb", "<Plug>(git-conflict-both)", desc = "Choose both changes" },
                { "<leader>gMn", "<Plug>(git-conflict-none)", desc = "Choose neither change" },
                { "<leader>gM]", "<Plug>(git-conflict-prev-conflict)", desc = "Previous Conflict" },
                { "<leader>gM[", "<Plug>(git-conflict-prev-conflict)", desc = "Next Conflict" },
            },
            {
                { "<leader>gG", group = "Octo" },
                {
                    { "<leader>gGp", group = "+pr" },
                    { "<leader>gGpl", "<cmd>Octo pr list<cr>", desc = "List PRs in Current Repository" },
                    { "<leader>gGpc", "<cmd>Octo pr changes<cr>", desc = "List Changes on PR" },
                    { "<leader>gGpd", "<cmd>Octo pr diff<cr>", desc = "Show PR Diff" },
                    { "<leader>gGpC", "<cmd>Octo pr checkout<cr>", desc = "Checkout PR" },
                    { "<leader>gGpr", "<cmd>Octo pr reload<cr>", desc = "Reload PR" },
                    { "<leader>gGpb", "<cmd>Octo pr browser<cr>", desc = "Open PR in Browser" },
                    { "<leader>gGpR", "<cmd>Octo pr ready<cr>", desc = "Mark Draft PR as Ready for Review" },
                    { "<leader>gGpx", "<cmd>Octo pr close<cr>", desc = "Close current PR" },
                    { "<leader>gGpu", "<cmd>Octo pr url<cr>", desc = "Copy PR URL" },
                    { "<leader>gGpv", "<cmd>Octo pr checks<cr>", desc = "Show PR Readiness Validation" },
                    { "<leader>gGpn", "<cmd>Octo pr create<cr>", desc = "Create a PR from the current Branch" },
                },
                {
                    { "<leader>gGr", group = "+repo" },
                    { "<leader>gGrb", "<cmd>Octo repo browser<cr>", desc = "Open repo in browser" },
                    { "<leader>gGru", "<cmd>Octo repo url<cr>", desc = "Repo URL" },
                },
                {
                    { "<leader>gGt", group = "+threads" },
                    { "<leader>gGtr", "<cmd>Octo thread resolve<cr>", desc = "Resolve Thread" },
                    { "<leader>gGtu", "<cmd>Octo thread unresolve<cr>", desc = "Unresolve Thread" },
                },
                {
                    { "<leader>gGR", group = "+review" },
                    { "<leader>gGRr", "<cmd>Octo review start<cr>", desc = "Start Review" },
                    { "<leader>gGRs", "<cmd>Octo review submit<cr>", desc = "Submit Review" },
                    { "<leader>gGRR", "<cmd>Octo review resume<cr>", desc = "Resume Review" },
                    { "<leader>gGRD", "<cmd>Octo review discard<cr>", desc = "Discard Review" },
                    { "<leader>gGRc", "<cmd>Octo review comments<cr>", desc = "View Review Comments" },
                    { "<leader>gGRx", "<cmd>Octo review close<cr>", desc = "Close review window" },
                },
                { "<leader>gGs", "<cmd>Octo search<cr>", desc = "Search GH" },
                { "<leader>gGg", "<cmd>Octo gist list<cr>", desc = "List gists" },
                { "<leader>gGi", "<cmd>Octo issue list<cr>", desc = "List Issues in GitHub" },
                { "<leader>gG?", "<cmd>Octo actions<cr>", desc = "List Octo Actions" },
            },
            { "<leader>gl", "<cmd>lua lazygit_toggle()<cr>", desc = "Open LazyGit" },
            { "<leader>gy", "<cmd>lua require('gitlinker').get_buf_range_url(n)<cr>", desc = "Git Link to Line" },
            {
                { "<leader>gF", group = "+find git" },
                {
                    "<leader>gFl",
                    "<cmd>lua require'telescope'.extensions.advanced_git_search.search_log_content()<cr>",
                    desc = "Search Log Content",
                },
                {
                    "<leader>gFL",
                    "<cmd>lua require'telescope'.extensions.advanced_git_search.diff_commit_line()<cr>",
                    desc = "Search Diff Commit Line",
                },
                {
                    "<leader>gFc",
                    "<cmd>lua require'telescope'.extensions.advanced_git_search.diff_commit_file()<cr>",
                    desc = "Search Diff Commit File",
                },
                {
                    "<leader>gFb",
                    "<cmd>lua require'telescope'.extensions.advanced_git_search.diff_commit_branch()<cr>",
                    desc = "Search Diff Commit Branch",
                },
            },
        },
        {
            { "<leader>o", group = "+open" },
            { "<leader>od", "<cmd>TodoTrouble<cr>", desc = "Open TODO List (Trouble)" },
            { "<leader>oD", "<cmd>TodoTelescope<cr>", desc = "Open TODO List (Telescope)" },
            { "<leader>of", ":normal gof<CR>", desc = "Open File in Finder" },
            { "<leader>oF", ":normal goF<CR>", desc = "Open PWD in Finder" },
            { "<leader>oh", ":silent !tmux split-window -dh", desc = "Split Tmux Pane without Focus" },
            {
                "<leader>os",
                ":silent !tmux split-window" .. " -c " .. "%:p:h" .. " <CR>:<C-[><CR>",
                desc = "split tmux-window on cwd",
            },
            { "<leader>oq", "<cmd>Trouble qflist<cr>", desc = "Open Quickfix" },
        },
        {
            { "<leader>p", group = "+project" },
            {
                "<leader>pf",
                "<cmd>lua require('aw.plugins.telescope').project_search()<cr>",
                desc = "Open Project File",
            },
            { "<leader>pp", "<cmd>lua require'telescope'.extensions.project.project{}<CR>", desc = "Project Finder" },
            { "<leader>pz", "<cmd>Telescope zoxide list<cr>", desc = "Zoxide Directory List" },
        },
        {
            { "<leader>s", group = "+search" },
            { "<leader>sb", "<cmd>Telescope buffers<cr>", desc = "Find buffer" },
            { "<leader>sc", "<cmd>Telescope commands<cr>", desc = "Commands" },
            { "<leader>sf", "<cmd>Telescope find_files<cr>", desc = "Find file" },
            { "<leader>sg", "<cmd>Telescope git_branches<cr>", desc = "Checkout branch" },
            { "<leader>sh", "<cmd>Telescope command_history<cr>", desc = "Find command history" },
            { "<leader>sL", "<cmd>Telescope treesitter<cr>", desc = "Treesitter" },
            { "<leader>sk", "<cmd>Telescope keymaps<cr>", desc = "Keymaps" },
            { "<leader>sm", "<cmd>Telescope marks<cr>", desc = "Marks" },
            {
                "<leader>sn",
                "<cmd>lua require('aw.plugins.telescope').search_all_files()<cr>",
                desc = "Search File Names in Context",
            },
            { "<leader>so", "<cmd>Telescope oldfiles<cr>", desc = "Open old files" },
            { "<leader>sR", "<cmd>Telescope resume<cr>", desc = "Open previous search" },
            { "<leader>s", "<cmd>Telescope registers<cr>", desc = "Registers" },
            { "<leader>sp", "<cmd>TodoTelescope<cr>", desc = "Open TODO comments" },
            { "<leader>sP", "<cmd>Telescope zoxide list<cr>", desc = "Open projects" },
            {
                "<leader>ss",
                "<cmd>lua require('aw.plugins.telescope').lsp_document_methods()<cr>",
                desc = "LSP Doc Methods",
            },
            { "<leader>sS", "<cmd>Telescope lsp_document_symbols<cr>", desc = "LSP Doc Symbols" },
            {
                "<leader>st",
                "<cmd>lua require('aw.plugins.telescope').search_only_certain_files()<cr>",
                desc = "Search by file types",
            },
            { "<leader>sw", "<cmd>Telescope grep_string<cr>", desc = "Word under cursor" },
        },
        { "<leader>u", "<cmd>UndotreeToggle<cr>", desc = "Undo Tree" },
        { "<leader>U", "<cmd>:Telescope undo<cr>", desc = "Telescope Undo" },
        { "<leader>h", "<cmd>lua require'focus'.split_command('h')<cr>", desc = "Focus Left" },
        { "<leader>l", "<cmd>lua require'focus'.split_command('l')<cr>", desc = "Focus Right" },
        { "<leader>k", "<cmd>lua require'focus'.split_command('k')<cr>", desc = "Focus Up" },
        { "<leader>j", "<cmd>lua require'focus'.split_command('j')<cr>", desc = "Focus Down" },
        {
            { "<leader>?", group = "+help" },
            { "<leader>?t", "<cmd>:Telescope builtin<cr>", desc = "Telescope" },
            { "<leader>?c", "<cmd>:Telescope commands<cr>", desc = "Commands" },
            { "<leader>?h", "<cmd>:Telescope help_tags<cr>", desc = "Help Pages" },
            { "<leader>?m", "<cmd>:Telescope man_pages<cr>", desc = "Man Pages" },
            { "<leader>?k", "<cmd>:Telescope keymaps<cr>", desc = "Key Maps" },
            { "<leader>?s", "<cmd>:Telescope highlights<cr>", desc = "Search Highlight Groups" },
            { "<leader>?l", [[<cmd>TSHighlightCapturesUnderCursor<cr>]], desc = "Highlight Groups at cursor" },
            { "<leader>?f", "<cmd>:Telescope filetypes<cr>", desc = "File Types" },
            { "<leader>?o", "<cmd>:Telescope vim_options<cr>", desc = "Options" },
            { "<leader>?a", "<cmd>:Telescope autocommands<cr>", desc = "Auto Commands" },
        },
        {
            { "<leader>,", group = "+settings" },
            { "<leader>,l", "<cmd>:Lazy<cr>", desc = "Gogo Lazy" },
            { "<leader>,m", "<cmd>:Mason<cr>", desc = "Gogo Mason" },
            { "<leader>,n", "<cmd>lua require('aw.plugins.telescope').edit_nvim()<cr>", desc = "Edit Nvim Config" },
            { "<leader>,d", "<cmd>lua require('aw.plugins.telescope').edit_config()<cr>", desc = "Edit Config Files" },
            {
                "<leader>,s",
                "<cmd>lua require('luasnip.loaders').edit_snippet_files()<cr>",
                desc = "Edit current RT Snippets",
            },
            {
                "<leader>,S",
                "<cmd>source ~/Config/nvim/lua/aw/plugins/luasnip/init.lua<cr>",
                desc = "Hot reload for Snippets",
            },
        },
        {
            { "<leader>w", group = "+window" },
            { "<leader>w=", "<C-w>=", desc = "Reset Window Layout" },
            { "<leader>w-", "<cmd>rightbelow sb<cr>", desc = "Split Window Horizontal" },
            { "<leader>w/", "<cmd>vertical rightbelow sb<cr>", desc = "Split Window Vertical" },
            { "<leader>wd", "<cmd>q<cr>", desc = "Close Current Window" },
            { "<leader>wD", "<cmd>only<cr>", desc = "Close All Other Windows" },
            { "<leader>wh", "<C-w>h", desc = "Focus Window to Left" },
            { "<leader>wl", "<C-w>l", desc = "Focus Window to Right" },
            { "<leader>wj", "<C-w>j", desc = "Focus Window Below" },
            { "<leader>wk", "<C-w>k", desc = "Focus Window Above" },
            { "<leader>wH", "<cmd>wincmd H<cr>", desc = "Move Window to Right" },
            { "<leader>wL", "<cmd>wincmd L<cr>", desc = "Move Window to Left" },
            { "<leader>wJ", "<cmd>wincmd J<cr>", desc = "Move Window to Bottom" },
            { "<leader>wK", "<cmd>wincmd K<cr>", desc = "Move Window to Top" },
            { "<leader>ws", "<cmd>rightbelow sb<cr>", desc = "Split Window Horizontal" },
            { "<leader>wt", "<cmd>enew<cr>", desc = "New Empty Buffer" },
            {
                { "<leader>wT", group = "tabs" },
                { "<leader>wTd", "<cmd>tabclose<cr>", desc = "Close Current Tab" },
            },
            { "<leader>wv", "<cmd>vertical rightbelow sb<cr>", desc = "Split Window Vertical" },
            {
                { "<leader>wf", group = "file new window" },
                {
                    "<leader>wfl",
                    "<cmd>vertical rightbelow sb<CR><Cmd>FzfLua files<cr>",
                    desc = "New File Split Right",
                },
                { "<leader>wfh", "<cmd>vertical sb<CR><Cmd>FzfLua files<cr>", desc = "New File Split Left" },
                {
                    "<leader>wfj",
                    "<cmd>rightbelow sb<CR><Cmd>FzfLua files<cr>",
                    desc = "New File Split Below",
                },
                { "<leader>wfk", "<cmd>split<CR><Cmd>FzfLua files<cr>", desc = "New File Split Above" },
            },
            {
                { "<leader>wN", group = "new empty buffer" },
                { "<leader>wNc", "<cmd>enew<cr>", desc = "New In Current Window" },
                { "<leader>wNh", "<cmd>vnew<cr>", desc = "New In Split Left" },
                { "<leader>wNl", "<cmd>vertical rightbelow new<cr>", desc = "New In Split Right" },
                { "<leader>wNj", "<cmd>rightbelow new<cr>", desc = "New In Split Below" },
                { "<leader>wNk", "<cmd>new<cr>", desc = "New In Split Above" },
            },
        },
        {
            { "<leader>x", group = "+tooling" },
            { "<leader>xx", "<cmd>Trouble diagnostics toggle<cr>", desc = "Trouble Diagnostics" },
            { "<leader>xX", "<cmd>Trouble diagnostics toggle filter.buf=0<cr>", desc = "Trouble Buffer Diagnostics" },
            { "<leader>xs", "<cmd>Trouble symbols toggle focus=true<cr>", desc = "Trouble Symbols" },
            { "<leader>xl", "<cmd>Trouble lsp toggle focus=true win.position=right<cr>", desc = "LSP Def/Ref" },
            { "<leader>xt", "<cmd>TodoTrouble<cr>", desc = "Todo Trouble" },
            { "<leader>xT", "<cmd>TodoTelescope<cr>", desc = "Todo Telescope" },
            { "<leader>xL", "<cmd>Trouble loclist toggle<cr>", desc = "Open Location List" },
            { "<leader>xq", "<cmd>Trouble qflist toggle<cr>", desc = "Open Quickfix List" },
        },
        { "<leader>`", "<cmd>ToggleTerm dir=%:p:h<cr>", desc = "Terminal" },
        { "<leader>z", [[<cmd>ZenMode<cr>]], desc = "Zen Mode" },
    },
})
